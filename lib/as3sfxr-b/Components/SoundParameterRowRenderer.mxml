<?xml version="1.0" encoding="utf-8"?>
<!-- containers\spark\myComponents\MySimpleItemRendererCB.mxml -->
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				valueCommit="OnValueCommit()"
				 contentBackgroundColor="#FFFFFF" xmlns:local="*">
	
	<fx:Script>
		<![CDATA[
			import dataClasses.SoundListRowData;
			import spark.skins.spark.CheckBoxSkin;
			
			private function CreationComplete(event:Event):void
			{					
				//sliders pips wrongly positioned
				(slider.skin as TickedHSliderSkin).track.skin.invalidateDisplayList();				
			}
			
			private function OnValueCommit():void
			{				
				(slider.skin as TickedHSliderSkin).track.skin.invalidateDisplayList();	
			}
						
			private function SliderValueChange(event:Event):void
			{
				data.value=this.slider.value;
				(data as SoundListRowData).dispatchEvent(new Event(SoundListRowData.SLIDER_CHANGE));
			}			
			
			private function OnLockButtonChanged(event:Event):void
			{
				data.locked = locked.selected;
				(data as SoundListRowData).dispatchEvent(new Event(SoundListRowData.LOCKEDNESS_CHANGE));
			}
			
			private function LabelClick():void
			{				
				(data as SoundListRowData).dispatchEvent(new Event(SoundListRowData.DEFAULT_CLICK));				
			}
				
		]]>
	</fx:Script>
	
	<s:Rect width="100%" height="100%">
		<s:fill><s:SolidColor color="{ (data.odd ? 0xffccbda1 : 0xffe7d1a7)  }" /></s:fill>	
	</s:Rect>
	<s:Rect top="-1" bottom="0" left="-1" right="0">
		<s:stroke>
			<s:LinearGradientStroke rotation="90" weight="1">
				<s:GradientEntry color="0"  />
				<s:GradientEntry color="0"  />
			</s:LinearGradientStroke>
		</s:stroke>		
	</s:Rect>
	<s:HGroup 
		verticalCenter="0" 
		left="2" 
		right="5" 
		top="1" 
		bottom="2" 
		verticalAlign="top"
		  creationComplete="CreationComplete(event)"
		>    
		<s:CheckBox 
			id="locked" 
			toolTip="Lock field during randomization/mutation?" 
			verticalCenter="0" 
			skinClass="spark.skins.spark.CheckBoxSkin"			 
		 	change="OnLockButtonChanged(event)"
			selected="{data.locked}"
			 height="17"
			 />                
		<s:Label 		
			id = "fieldlabel"
			toolTip = "{data.tooltip}"
			text="{data.label}" 
			width="170" 
			height="17"  
			verticalAlign="middle" 
			enabled="{data.enabled}" 
			textAlign="right"
			click="LabelClick()"
			/>    
		<s:HSlider
			  skinClass="components.TickedHSliderSkin"
			id="slider" 
			width="116" 
			minimum="{data.min}" 
			maximum="{data.max}"			
			value="{data.value}"
			stepSize="0.005" 
			enabled="{data.enabled}"
			valid="true" 
			top="0" 
			bottom="5"
		 	changeEnd="SliderValueChange(event)"
			/>
	</s:HGroup>
</s:ItemRenderer>