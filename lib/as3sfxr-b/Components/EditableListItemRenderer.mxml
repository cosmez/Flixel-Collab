<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="true"
				creationComplete="onCreationComplete()"					
				>
	
	<fx:Script>
		<![CDATA[
			import dataClasses.SoundData;
			
			import mx.events.FlexEvent;
			
			import spark.components.List;
			import spark.components.supportClasses.ListBase;
			import spark.events.IndexChangeEvent;
			
			private function onCreationComplete():void
			{	
				data.addEventListener(FlexEvent.CHANGE_START,TriggerModified);
				data.addEventListener(FlexEvent.CHANGE_END ,TriggerUnModified);	
			}
			
			private function TriggerModified(event:Event):void
			{
				var oldValue:Boolean=data.modified;
				
				data.modified=true;
				
				var list:ListBase = this.owner as ListBase;
				list.dataProvider.itemUpdated(data, 'modified', oldValue, data.modified); 
				
				labelDisplay.text = data.label +"*";
				labelDisplay.alpha=0.5;
				this.inputTxt.alpha=0.5;
			}
			
			private function TriggerUnModified(event:Event):void
			{
				
				var oldValue:Boolean=data.modified;
				
				data.modified=false;
				
				var list:ListBase = this.owner as ListBase;
				list.dataProvider.itemUpdated(data, 'modified', oldValue, data.modified); 
				
				labelDisplay.text = data.label;
				labelDisplay.alpha=1.0;
				this.inputTxt.alpha=1.0;
			}						
			
			private function onEdit(event:Event):void 
			{
				inputTxt.text = data.label;
				isEdit(true);
				
				inputTxt.selectRange(inputTxt.text.length,inputTxt.text.length+1);
				inputTxt.setFocus();
			}
			
			private function isEdit(value:Boolean):void 
			{
				labelDisplay.visible = !value;
				inputTxt.visible =  value;
			}			
			
			private function gobble(event:Event):void
			{
				event.stopImmediatePropagation();
			}
			
			private function onChange(event:Event):void 
			{					
				if (data==null)
				{
					trace("EEEK ");
					return;
				}
				var oldValue:String = labelDisplay.text;
				
				if (oldValue != inputTxt.text)
				{
					data.label = inputTxt.text;
					labelDisplay.text = inputTxt.text;
					if (data.modified)
						labelDisplay.text = labelDisplay.text+"*";
					
					var list:ListBase = this.owner as ListBase;
					list.dataProvider.itemUpdated(data, 'label', oldValue, labelDisplay.text); 
					
					RenameData();
				}
				isEdit(false);
				
			}		
			
			protected function RenameData():void
			{
				//OVERRIDE THIS
				//var app:sfxr_interface = this.parentApplication as sfxr_interface;
				//app.RenameSoundData(data as SoundData);
			}
			
			protected function RemoveData():void
			{
				//OVERRIDE THIS
				//var app:sfxr_interface = parentApplication as sfxr_interface;
				//app.RemoveFromSoundList(data);
			}
			
			protected function removeItem(event:Event):void
			{
				RemoveData();
				event.stopImmediatePropagation();
			}				
			
		]]>
	</fx:Script>
	
	
	<s:Label id="labelDisplay" 
			 text="{data.label + (data.modified?'*':'')}"   
			 click="onEdit(event)" 
			 top="0" bottom="0" left="0" right="0"
			 paddingTop="7" paddingBottom="5" paddingLeft="5" paddingRight="3"  
			 verticalAlign="middle"
			 />
	
	<s:TextInput id="inputTxt"  
				 visible="false"  
				 focusOut="onChange(event)"	
				 top="1"  bottom="1" left="1" right="0" minWidth="25"
				 restrict="A-Za-z 0-9"
				 />
	
	<s:Button id="removeBtn"
			  width="30"
			  label="X"		
			  visible="true"
			  right="1"
			  top="2"
			  mouseDown="gobble(event)"
			  click="removeItem(event)"
			  mouseOver="gobble(event)"
			  mouseUp="gobble(event)"
			  toolTip="Remove item from list"
			  />
	
	
</s:ItemRenderer>